# auto-generated by grc.converter

id: sparsdr_sample_distributor
label: Sample Distributor
category: '[SparSDR]'

parameters:
-   id: type
    label: Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: vlen
    label: Vec Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: num_inputs
    label: Inputs
    dtype: int
    default: '1'
    hide: part
-   id: num_outputs
    label: Outputs
    dtype: int
    default: '1'
    hide: part

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }
    multiplicity: ${ num_inputs }

outputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }
    multiplicity: ${ num_outputs }
asserts:
- ${ vlen > 0 }

templates:
    imports: import sparsdr
    make: sparsdr.sample_distributor(${type.size} * ${vlen})

documentation: |-
    Copies samples from many inputs to many outputs leading to decoders

file_format: 1
